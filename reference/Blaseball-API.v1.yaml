openapi: 3.0.0
info:
  title: Blaseball API
  description: Unofficial documentation for the Blaseball website API.
  version: 1.0.0
  contact:
    name: The Game Band
  termsOfService: 'https://www.blaseball.com/tos'
externalDocs:
  description: A GitHub repository with separate Markdown documents explaining each API endpoint.
  url: 'https://github.com/Society-for-Internet-Blaseball-Research/blaseball-api-spec'
servers:
  - url: 'https://www.blaseball.com'
    description: Main website
  - url: 'https://cors-proxy.blaseball-reference.com'
    description: CORS proxy run by SIBR
paths:
  /database/allDivisions:
    get:
      summary: Get all divisions
      description: |-
        Returns a list of each division and its member teams.

        This will return all divisions known to the database - including retired divisions (eg. Chaotic/Lawful Good/Evil from Season 5 and before).
      operationId: allDivisions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Division'
      tags:
        - League
  /database/allTeams:
    get:
      summary: Get all teams
      description: |-
        Returns a list of team definitions for every team in the league - as well as some teams outside the league (notably the *Baltimore Crabs*, ID `8d87c468-699a-47a8-b40d-cfb73a5660ad`, and *The Hall Stars*, ID `c6c01051-cdd4-47d6-8a98-bb5b754f937f`).

        Note that *THE SHELLED ONE'S PODS* (ID `40b9ec2a-cb43-4dbb-b836-5accb62e7c20`) has been deleted from the server and will not be returned by this endpoint.
      operationId: allTeams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Team.v1.yaml
      tags:
        - Teams
  /database/bonusResults:
    get:
      summary: List bonus (blessing) results
      description: Get the results of one or more bonuses (blessings). Returns an array. Use commas to separate multiple bonus IDs.
      operationId: bonusResults
      parameters:
        - name: ids
          in: query
          description: IDs of bonus results to return
          style: form
          explode: false
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BonusResult'
      tags:
        - Elections
  /database/decreeResults:
    get:
      summary: List decree results
      description: Get the results of one or more decrees. Returns an array. Use commas to separate multiple decree IDs.
      operationId: decreeResults
      parameters:
        - name: ids
          in: query
          description: IDs of decree results to return (comma-separated)
          required: true
          style: form
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DecreeResult'
      tags:
        - Elections
  /database/division:
    get:
      summary: Get division details
      description: Returns information for a given division ID.
      operationId: division
      parameters:
        - name: id
          in: query
          description: ID of division to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Division'
      tags:
        - League
  /database/games:
    get:
      summary: Get game details by date
      description: |-
        Returns the last broadcast game update for a given game day and season or tournament. Completed games will show the final update of the game (generally "Game over."), currently running games will show the update present on www.blaseball.com, and future games (beyond the next game) will be missing data about pitchers and odds.

        This endpoint can return all regular-season games (up to Day 99 - so `98` here) of the current season, even ones that haven't started. New season schedules will become available once the simulation phase changes to `1` (at around Monday 1 AM Pacific). Postseason and tournament games are never available more than a single game in advance.
      operationId: games
      parameters:
        - name: season
          in: query
          description: Season (zero-indexed)
          required: true
          schema:
            type: integer
            minimum: 0
        - name: day
          in: query
          description: Day (zero-indexed)
          required: true
          schema:
            type: integer
            minimum: 0
        - name: tournament
          in: query
          description: Tournament identifier
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Game.v1.yaml
      tags:
        - Games
  '/database/gameById/{gameId}':
    get:
      summary: Get game details by ID
      description: 'Returns the last broadcast game update for a given game ID. Completed games will show the final update of the game, currently running games will show the update present on www.blaseball.com, and future games will show a placeholder update if the game is already scheduled.'
      operationId: gameById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Game.v1.yaml
      tags:
        - Games
    parameters:
      - schema:
          type: string
          format: uuid
        name: gameId
        in: path
        required: true
  /database/gameStatsheets:
    get:
      summary: List game statsheets
      description: Get the statsheets for one or more games. Returns an array. Use commas to separate multiple game statsheet IDs.
      operationId: gameStatsheets
      parameters:
        - name: ids
          in: query
          description: IDs of game statsheets to return
          required: true
          style: form
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameStatsheet'
      tags:
        - Statsheets
        - Games
  /database/globalEvents:
    get:
      summary: Get global events
      description: An array of messages that make up the content of the ticker at the top of the Blaseball site after logging in.
      operationId: globalEvents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TickerMessage'
      tags:
        - Global
  /database/league:
    get:
      summary: Get league details
      description: |-
        Returns information for a given league ID.

        There is currently only one known league: Internet League Blaseball, with ID `d8545021-e9fc-48a3-af74-48685950a183`.
      operationId: league
      parameters:
        - name: id
          in: query
          description: ID of league to return
          required: true
          schema:
            type: string
            format: uuid
            example: d8545021-e9fc-48a3-af74-48685950a183
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
              examples:
                Internet League Blaseball (as of Season 11):
                  value:
                    id: d8545021-e9fc-48a3-af74-48685950a183
                    subleagues:
                      - aabc11a1-81af-4036-9f18-229c759ca8a9
                      - 4fe65afa-804f-4bb2-9b15-1281b2eab110
                    name: Internet League Blaseball
                    tiebreakers: 370c436f-79fa-418b-bc98-5db48442ba3f
      tags:
        - League
  /database/offseasonRecap:
    get:
      summary: Get election results
      description: Information about the decrees and bonuses that passed for a given season number (zero indexed).
      operationId: offseasonRecap
      parameters:
        - name: season
          in: query
          description: Season index (zero-based)
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffseasonRecap'
      tags:
        - Elections
  /database/offseasonSetup:
    get:
      summary: Get election details
      description: List of decrees and blessings for the end of the current season
      operationId: offseasonSetup
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffseasonSetup'
      tags:
        - Elections
  /database/players:
    get:
      summary: List player stats
      description: Get one or more player objects. Returns an array. Use commas to separate multiple player IDs.
      operationId: players
      parameters:
        - name: ids
          in: query
          description: IDs of players to return
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Player.v1.yaml
      tags:
        - Players
  /database/playerSeasonStats:
    get:
      summary: List player statsheets
      description: 'Get the statsheets for one or more players. Returns an array. Use commas to separate multiple player statsheet IDs. Keep in mind that each player statsheet is associated with a particular game, so the listed stats are only for that game.'
      operationId: playerStatsheets
      parameters:
        - name: ids
          in: query
          description: IDs of player statsheets to return
          required: true
          style: form
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerStatsheet'
      tags:
        - Statsheets
        - Players
  /database/playoffMatchups:
    get:
      summary: List playoff matchup details
      description: Get information about one or more playoff matchups. Returns an array. Use commas to separate multiple playoff matchup IDs.
      operationId: playoffMatchups
      parameters:
        - name: ids
          in: query
          description: IDs of playoff matchups to return
          required: true
          style: form
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayoffMatchup'
      tags:
        - League
        - Global
  /database/playoffRound:
    get:
      summary: Get playoff round details
      description: Information about a specific round in the playoffs.
      operationId: playoffRound
      parameters:
        - name: id
          in: query
          description: ID of playoff round to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayoffRound'
      tags:
        - Games
        - League
  /database/playoffs:
    get:
      summary: Get playoff details
      description: Get details about the playoffs for a given season number (zero indexed).
      operationId: playoffs
      parameters:
        - name: number
          in: query
          description: Season index (zero-based)
          required: true
          schema:
            type: string
            minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playoffs'
      tags:
        - Games
        - League
  /database/season:
    get:
      summary: Get season details
      description: Returns information for a given season number (zero indexed).
      operationId: season
      parameters:
        - name: number
          in: query
          description: Season index (zero-based)
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
      tags:
        - League
  /database/seasonStatsheets:
    get:
      summary: List season statsheets
      description: Get the statsheets for one or more seasons. Returns an array. Use commas to separate multiple season statsheet IDs. Only contains the latest team statsheet for each team.
      operationId: seasonStatsheets
      parameters:
        - name: ids
          in: query
          description: IDs of season statsheets to return
          required: true
          style: form
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeasonStatsheet'
      tags:
        - Statsheets
        - League
  /database/simulationData:
    get:
      summary: Get simulation data
      description: 'Get current data about the simulation, ie day, season, time to next cycle, etc.'
      operationId: simulationData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationData'
      tags:
        - Global
  /database/standings:
    get:
      summary: Get standings details
      description: Returns information for a given standings ID from the season object.
      operationId: standings
      parameters:
        - name: id
          in: query
          description: ID of standings to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Standings'
      tags:
        - League
  /events/streamData:
    get:
      summary: Live data stream
      description: |-
        This is the endpoint that the site uses to stream live game data to the www.blaseball.com site. It uses [Server Sent Events](https://en.wikipedia.org/wiki/Server-sent_events). Every few seconds it sends a single `data` event.

        Of the fields in the `value` object, it'll only send the children (ie. `games`, `leagues`, `temporal` and `fights`) that have changed since the last stream update. If no objects have updated (eg. between games or during siestas), the stream will not send any data at all, and will generally time out after a minute or so. On the first update after connecting, it will send all fields, though.
      operationId: streamData
      responses:
        '200':
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/StreamData'
      tags:
        - Global
  /database/subleague:
    get:
      summary: Get subleague details
      description: Returns information for a given subleague ID. Limited to a single subleague ID.
      operationId: subleague
      parameters:
        - name: id
          in: query
          description: ID of subleague to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subleague'
      tags:
        - League
  /database/team:
    get:
      summary: Get team details
      description: |-
        Returns limited stats, player IDs, and other information for a given team ID. Limited to a single team ID.

        Note that the *THE SHELLED ONE'S PODS* team (ID `40b9ec2a-cb43-4dbb-b836-5accb62e7c20`) has been deleted from the server and will not be returned by this endpoint.
      operationId: team
      parameters:
        - name: id
          in: query
          description: ID of team to return
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Team.v1.yaml
      tags:
        - Teams
  /database/teamStatsheets:
    get:
      summary: List team statsheets
      description: 'Get the statsheets for one or more teams. Returns an array. Use commas to separate multiple team statsheet IDs. Keep in mind that a team statsheet is associated with a particular game, so the player stats are only for that game and the list of players are only those who played in that game.'
      operationId: teamStatsheets
      parameters:
        - name: ids
          in: query
          description: IDs of team statsheets to return
          required: true
          style: form
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamStatsheet'
      tags:
        - Statsheets
        - Teams
  /database/tiebreakers:
    get:
      summary: Get tiebreaker details
      description: 'Returns information for a given tiebreaker ID from the league object. Each of the ids in `order` is an ID for a team object. This represents the "Divine Favor" ranking. (Note: the tiebreaker object is returned inside a single-element array, even though the endpoint''s argument only accepts one ID.)'
      operationId: tiebreakers
      parameters:
        - name: id
          in: query
          description: ID of tiebreakers object to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tiebreakers'
                minItems: 1
                maxItems: 1
      tags:
        - League
  /api/getTribute:
    get:
      summary: Get Hall of Flame players
      tags:
        - Global
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TributeItem'
              examples:
                Hall of Flame leaderboard (2020-09-26):
                  value:
                    - playerId: d74a2473-1f29-40fa-a41e-66fa2281dfca
                      peanuts: 11171444
                    - playerId: 493a83de-6bcf-41a1-97dd-cc5e150548a3
                      peanuts: 11160776
                    - playerId: 8604e861-d784-43f0-b0f8-0d43ea6f7814
                      peanuts: 8305777
                    - playerId: bd4c6837-eeaa-4675-ae48-061efa0fd11a
                      peanuts: 4386343
                    - playerId: 7310c32f-8f32-40f2-b086-54555a2c0e86
                      peanuts: 4040777
                    - playerId: 14d88771-7a96-48aa-ba59-07bae1733e96
                      peanuts: 3946121
                    - playerId: 98a98014-9636-4ece-a46a-4625b47c65d5
                      peanuts: 3775486
                    - playerId: afc90398-b891-4cdf-9dea-af8a3a79d793
                      peanuts: 3036491
                    - playerId: f7715b05-ee69-43e5-a0e5-8e3d34270c82
                      peanuts: 3025777
                    - playerId: 70ccff1e-6b53-40e2-8844-0a28621cb33e
                      peanuts: 2901596
                    - playerId: f8c20693-f439-4a29-a421-05ed92749f10
                      peanuts: 2898010
                    - playerId: 31f83a89-44e3-47b7-8c9e-0dfdcd8bd30f
                      peanuts: 2878444
                    - playerId: 25376b55-bb6f-48a7-9381-7b8210842fad
                      peanuts: 2870705
                    - playerId: 3d4545ed-6217-4d7a-9c4a-209265eb6404
                      peanuts: 2855932
                    - playerId: a311c089-0df4-46bd-9f5d-8c45c7eb5ae2
                      peanuts: 2854999
                    - playerId: 4941976e-31fc-49b5-801a-18abe072178b
                      peanuts: 2627500
                    - playerId: 18798b8f-6391-4cb2-8a5f-6fb540d646d5
                      peanuts: 2440333
                    - playerId: 33fbfe23-37bd-4e37-a481-a87eadb8192d
                      peanuts: 1559222
                    - playerId: cd68d3a6-7fbc-445d-90f1-970c955e32f4
                      peanuts: 1463800
                    - playerId: bd9d1d6e-7822-4ad9-bac4-89b8afd8a630
                      peanuts: 1418700
                    - playerId: bd8d58b6-f37f-48e6-9919-8e14ec91f92a
                      peanuts: 1235010
                    - playerId: 15ae64cd-f698-4b00-9d61-c9fffd037ae2
                      peanuts: 1061888
                    - playerId: a5adc84c-80b8-49e4-9962-8b4ade99a922
                      peanuts: 1058800
                    - playerId: a1628d97-16ca-4a75-b8df-569bae02bef9
                      peanuts: 1057111
                    - playerId: f44a8b27-85c1-44de-b129-1b0f60bcb99c
                      peanuts: 829565
                    - playerId: 25f3a67c-4ed5-45b6-94b1-ce468d3ead21
                      peanuts: 724468
                    - playerId: d744f534-2352-472b-9e42-cd91fa540f1b
                      peanuts: 672700
                    - playerId: 2b1cb8a2-9eba-4fce-85cf-5d997ec45714
                      peanuts: 588444
                    - playerId: 2ae8cbfc-2155-4647-9996-3f2591091baf
                      peanuts: 584900
                    - playerId: 76c4853b-7fbc-4688-8cda-c5b8de1724e4
                      peanuts: 526500
                    - playerId: 262c49c6-8301-487d-8356-747023fa46a9
                      peanuts: 439444
                    - playerId: be35caba-b16a-4e0d-b927-4da857f4cdb5
                      peanuts: 399800
                    - playerId: 472f50c0-ef98-4d05-91d0-d6359eec3946
                      peanuts: 378333
                    - playerId: 248ccf3d-d5f6-4b69-83d9-40230ca909cd
                      peanuts: 347600
                    - playerId: 90c6e6ca-77fc-42b7-94d8-d8afd6d299e5
                      peanuts: 295475
                    - playerId: bd549bfe-b395-4dc0-8546-5c04c08e24a5
                      peanuts: 295111
                    - playerId: d1a7c13f-8e78-4d2e-9cae-ebf3a5fcdb5d
                      peanuts: 272500
                    - playerId: 8e1fd784-99d5-41c1-a6c5-6b947cec6714
                      peanuts: 256500
                    - playerId: a071a713-a6a1-4b4c-bb3f-45d9fba7a08c
                      peanuts: 237000
                    - playerId: 3afb30c1-1b12-466a-968a-5a9a21458c7f
                      peanuts: 227820
                    - playerId: f9c0d3cb-d8be-4f53-94c9-fc53bcbce520
                      peanuts: 227800
                    - playerId: c83a13f6-ee66-4b1c-9747-faa67395a6f1
                      peanuts: 219600
                    - playerId: f967d064-0eaf-4445-b225-daed700e044b
                      peanuts: 215600
                    - playerId: 40db1b0b-6d04-4851-adab-dd6320ad2ed9
                      peanuts: 215333
                    - playerId: 2ca0c790-e1d5-4a14-ab3c-e9241c87fc23
                      peanuts: 197684
                    - playerId: 43bf6a6d-cc03-4bcf-938d-620e185433e1
                      peanuts: 179500
                    - playerId: c86b5add-6c9a-40e0-aa43-e4fd7dd4f2c7
                      peanuts: 176333
                    - playerId: b3d518b9-dc68-4902-b68c-0022ceb25aa0
                      peanuts: 169444
                    - playerId: 57448b62-f952-40e2-820c-48d8afe0f64d
                      peanuts: 146600
                    - playerId: 3064c7d6-91cc-4c2a-a433-1ce1aabc1ad4
                      peanuts: 144500
                    - playerId: 7b0f91aa-4d66-4362-993d-6ff60f7ce0ef
                      peanuts: 141116
                    - playerId: b4505c48-fc75-4f9e-8419-42b28dcc5273
                      peanuts: 136000
                    - playerId: 773712f6-d76d-4caa-8a9b-56fe1d1a5a68
                      peanuts: 135800
                    - playerId: 5b9727f7-6a20-47d2-93d9-779f0a85c4ee
                      peanuts: 131900
                    - playerId: bca38809-81de-42ff-94e3-1c0ebfb1e797
                      peanuts: 130222
                    - playerId: 05bd08d5-7d9f-450b-abfa-1788b8ee8b91
                      peanuts: 126900
                    - playerId: 1ba715f2-caa3-44c0-9118-b045ea702a34
                      peanuts: 124389
                    - playerId: 8ba7e1ff-4c6d-4963-8e0f-7096d14f4b12
                      peanuts: 121000
                    - playerId: ef32eb48-4866-49d0-ae58-9c4982e01142
                      peanuts: 119700
                    - playerId: 03097200-0d48-4236-a3d2-8bdb153aa8f7
                      peanuts: 117898
                    - playerId: c73d59dd-32a0-49ce-8ab4-b2dbb7dc94ec
                      peanuts: 114830
                    - playerId: 495a6bdc-174d-4ad6-8d51-9ee88b1c2e4a
                      peanuts: 113270
                    - playerId: c83f0fe0-44d1-4342-81e8-944bb38f8e23
                      peanuts: 112820
                    - playerId: b86237bb-ade6-4b1d-9199-a3cc354118d9
                      peanuts: 112787
                    - playerId: 6fc3689f-bb7d-4382-98a2-cf6ddc76909d
                      peanuts: 111222
                    - playerId: 4bda6584-6c21-4185-8895-47d07e8ad0c0
                      peanuts: 109111
                    - playerId: 70a458ed-25ca-4ff8-97fc-21cbf58f2c2a
                      peanuts: 109111
                    - playerId: d5b6b11d-3924-4634-bd50-76553f1f162b
                      peanuts: 109111
                    - playerId: ab9eb213-0917-4374-a259-458295045021
                      peanuts: 109111
                    - playerId: 64b055d1-b691-4e0c-8583-fc08ba663846
                      peanuts: 109111
                    - playerId: 0fe896e1-108c-4ce9-97be-3470dde73c21
                      peanuts: 109111
                    - playerId: 80a2f015-9d40-426b-a4f6-b9911ba3add8
                      peanuts: 109111
      operationId: getTribute
      description: Returns a list of players on the Hall of Flame leaderboard.
  /api/getIdols:
    get:
      summary: Get Idol board
      tags:
        - Global
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdolItem'
              examples:
                Response after Season 6:
                  value:
                    - playerId: de21c97e-f575-43b7-8be7-ecc5d8c4eaff
                    - playerId: 04e14d7b-5021-4250-a3cd-932ba8e0a889
                    - playerId: 86d4e22b-f107-4bcf-9625-32d387fcb521
                    - playerId: 5ff66eae-7111-4e3b-a9b8-a9579165b0a5
                    - playerId: 083d09d4-7ed3-4100-b021-8fbe30dd43e8
                    - playerId: 667cb445-c288-4e62-b603-27291c1e475d
                    - playerId: 84a2b5f6-4955-4007-9299-3d35ae7135d3
                    - playerId: 3af96a6b-866c-4b03-bc14-090acf6ecee5
                    - playerId: 7aeb8e0b-f6fb-4a9e-bba2-335dada5f0a3
                    - playerId: 9820f2c5-f9da-4a07-b610-c2dd7bee2ef6
                    - playerId: f7847de2-df43-4236-8dbe-ae403f5f3ab3
                    - playerId: 1f159bab-923a-4811-b6fa-02bfde50925a
                    - playerId: 338694b7-6256-4724-86b6-3884299a5d9e
                    - playerId: 4b3e8e9b-6de1-4840-8751-b1fb45dc5605
                    - playerId: f0bcf4bb-74b3-412e-a54c-04c12ad28ecb
                    - playerId: 5bcfb3ff-5786-4c6c-964c-5c325fcc48d7
                    - playerId: 0bb35615-63f2-4492-80ec-b6b322dc5450
                    - playerId: 740d5fef-d59f-4dac-9a75-739ec07f91cf
                    - playerId: 8604e861-d784-43f0-b0f8-0d43ea6f7814
                    - playerId: efafe75e-2f00-4418-914c-9b6675d39264
                Response during Season 6:
                  value:
                    - id: 88c7bb4c-88a1-4afa-a0c3-58bb1d8dd00f
                      total: 993
                      playerId: 3af96a6b-866c-4b03-bc14-090acf6ecee5
                    - id: 18c159a6-31d4-4e82-a489-5bf576b8931b
                      total: 955
                      playerId: 5ff66eae-7111-4e3b-a9b8-a9579165b0a5
                    - id: bea20511-11b2-4484-b34e-8e7a716ba5ff
                      total: 902
                      playerId: 083d09d4-7ed3-4100-b021-8fbe30dd43e8
                    - id: c9872021-3b48-4008-8688-db331f9cccf1
                      total: 889
                      playerId: 667cb445-c288-4e62-b603-27291c1e475d
                    - id: f06ce39e-8550-40c8-99a0-786fbf690722
                      total: 856
                      playerId: 9820f2c5-f9da-4a07-b610-c2dd7bee2ef6
                    - id: e4118ec6-65c0-4927-b56b-7b4ba0a6febb
                      total: 722
                      playerId: c0732e36-3731-4f1a-abdc-daa9563b6506
                    - id: 8954025c-abcf-4740-a5d5-10fb4fa1e0eb
                      total: 589
                      playerId: 338694b7-6256-4724-86b6-3884299a5d9e
                    - id: dcd8af5f-67f2-42dd-ba38-13d769b4f963
                      total: 448
                      playerId: 86d4e22b-f107-4bcf-9625-32d387fcb521
                    - id: 572cca11-cba4-48aa-b4c6-09bd26de686c
                      total: 415
                      playerId: 1f159bab-923a-4811-b6fa-02bfde50925a
                    - id: f6ce9e17-ee62-406d-83b6-fa0cb918a34a
                      total: 333
                      playerId: f7847de2-df43-4236-8dbe-ae403f5f3ab3
                    - id: 27c0175d-ba67-4318-b4a2-1b95cb11aaf2
                      total: 332
                      playerId: 5bcfb3ff-5786-4c6c-964c-5c325fcc48d7
                    - id: 8ef1d8f2-e434-4b66-9474-54f11f4c2bfa
                      total: 331
                      playerId: c6a277c3-d2b5-4363-839b-950896a5ec5e
                    - id: 5619c535-fc93-4cc2-a4b2-cc6a0d0c6fc0
                      total: 331
                      playerId: 8604e861-d784-43f0-b0f8-0d43ea6f7814
                    - id: cf8d90a8-86ad-4a9c-a3ec-c13d269ad978
                      total: 316
                      playerId: 04e14d7b-5021-4250-a3cd-932ba8e0a889
                    - id: 615836c1-132e-4ade-953d-3b220aa7ff4c
                      total: 270
                      playerId: 44c92d97-bb39-469d-a13b-f2dd9ae644d1
                    - id: f54969e7-2ee3-466f-8a13-367d31bd65bc
                      total: 209
                      playerId: 84a2b5f6-4955-4007-9299-3d35ae7135d3
                    - id: f95791fb-eda1-443c-ac8b-557265041a06
                      total: 199
                      playerId: 4b3e8e9b-6de1-4840-8751-b1fb45dc5605
                    - id: 68ed240a-3938-4612-bf37-ff85ffda596f
                      total: 198
                      playerId: f2a27a7e-bf04-4d31-86f5-16bfa3addbe7
                    - id: a68dee9d-62a0-4623-a524-fea1b5cb851c
                      total: 185
                      playerId: 542af915-79c5-431c-a271-f7185e37c6ae
                    - id: ac86d376-b108-4ecb-9abe-35043c9f9795
                      total: 163
                      playerId: 4bf352d2-6a57-420a-9d45-b23b2b947375
      operationId: getIdols
      description: Returns a list of the top 20 players on the Idol leaderboard.
  /database/eventResults:
    get:
      summary: List event results (election Tidings)
      tags:
        - Elections
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResult'
      operationId: eventResults
      description: Get the results of one or more election events. Returns an array. Use commas to separate multiple bonus IDs.
      parameters:
        - schema:
            type: string
          in: query
          name: ids
          description: IDs of event results to return (comma-separated)
          required: true
  /database/mods:
    get:
      summary: List Modifications
      tags:
        - Global
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modification'
      operationId: mods
      description: Get the name and description of Team or Player Modifications. Returns an array. Use commas to separate multiple modification IDs.
      parameters:
        - schema:
            type: string
          in: query
          name: ids
          description: IDs of modifications to return (comma-separated)
          required: true
  /database/items:
    get:
      summary: List Items
      tags:
        - Global
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
      operationId: items
      description: Get information about a list of Items (Bat or Armor). Returns an array. Use commas to separate multiple item IDs.
      parameters:
        - schema:
            type: string
          in: query
          name: ids
          description: IDs of items to return (comma-separated)
          required: true
  /database/blood:
    get:
      summary: List Blood types
      tags:
        - Global
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: blood
      description: Get names of Blood types. Returns an array. Use commas to separate multiple blood IDs.
      parameters:
        - schema:
            type: string
            example: '0,1'
          in: query
          name: ids
          description: IDs of blood types to return (comma-separated)
          required: true
  /database/coffee:
    get:
      summary: List Cofee preferences
      tags:
        - Global
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: coffee
      description: Get names of Coffee preferences. Returns an array. Use commas to separate coffee IDs.
      parameters:
        - schema:
            type: string
            example: '0,1'
          in: query
          name: ids
          description: IDs of coffee preferences to return (comma-separated)
          required: true
  /database/feed/global:
    get:
      summary: Global Feed
      tags:
        - Feed
      responses:
        '200':
          description: '  OK'
          content:
            application/json:
              schema:
                type: array
                description: |
                  List of events
                items:
                  $ref: '#/components/schemas/FeedEvent'
      operationId: get-database-feed-global
      description: Get a complete list of feed events from across the league.
      parameters:
        - schema:
            $ref: '#/components/schemas/FeedType'
          in: query
          name: type
          description: Event type to return
        - schema:
            type: integer
          in: query
          name: category
          description: Event category to return
        - schema:
            type: integer
            minimum: 0
          in: query
          name: limit
          description: Number of events to return
  /database/feed/player:
    get:
      summary: Player Feed
      responses:
        '200':
          description: '  OK'
          content:
            application/json:
              schema:
                type: array
                description: |
                  List of events
                items:
                  $ref: '#/components/schemas/FeedEvent'
      parameters:
        - schema:
            $ref: '#/components/schemas/FeedType'
          in: query
          name: type
          description: Event type to return
        - schema:
            type: integer
          in: query
          name: category
          description: Event category to return
        - schema:
            type: integer
            minimum: 0
          in: query
          name: limit
          description: Number of events to return
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          description: Player to search for
          required: true
      operationId: get-database-feed-player
      description: Get a list of feed events tagged with a player. Not all event types are tagged.
      tags:
        - Feed
  /database/feed/team:
    get:
      summary: Team Feed
      tags:
        - Feed
      responses:
        '200':
          description: '  OK'
          content:
            application/json:
              schema:
                type: array
                description: |
                  List of events
                items:
                  $ref: '#/components/schemas/FeedEvent'
      parameters:
        - schema:
            $ref: '#/components/schemas/FeedType'
          in: query
          name: type
          description: Event type to return
        - schema:
            type: integer
          in: query
          name: category
          description: Event category to return
        - schema:
            type: integer
            minimum: 0
          in: query
          name: limit
          description: Number of events to return
        - schema:
            type: string
            format: uuid
          in: query
          name: id
          description: Team to search for
          required: true
      operationId: get-database-feed-team
      description: Get a list of feed events tagged with a team.
  /database/feedbyphase:
    get:
      summary: Feed by Phase
      tags:
        - Feed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedEvent'
      operationId: get-database-feedbyphase
      description: Gets all events that occurred during a specific phase.
      parameters:
        - schema:
            type: integer
          in: query
          name: season
          required: true
          description: The season to return.
        - schema:
            type: integer
          in: query
          name: phase
          description: The phase to return.
          required: true
components:
  schemas:
    BonusResult:
      type: object
      additionalProperties: false
      description: Represents the outcome of a single blessing after the election.
      title: Blessing Result
      x-examples:
        Headliners (Season 7):
          id: f0f15969-aecb-4f9e-8eb9-00f05ece732c
          bonusId: popular_lineup_order
          bonusTitle: Headliners
          teamId: b72f3061-f573-40d7-832a-5ad475bd7909
          totalVotes: 15631
          description: |-
            Arranged San Francisco Lovers's lineup in order of their Idolatry.
            1 - Knight Urlacher
            2 - Don Mitchell
            3 - Kichiro Guerra
            4 - Helga Burton
            5 - Alexander Horne
            6 - Ortiz Lopez
            7 - Helga Moreno
            8 - Theo King
            9 - Kennedy Meh
          highestTeam: b72f3061-f573-40d7-832a-5ad475bd7909
          highestTeamVotes: 11204
          teamVotes: 11204
        Hitting Boost (Season 1):
          id: cbb567c0-d770-4d22-92f6-ff16ebb94758
          bonusId: team_improve_hitting
          bonusTitle: Hitting Boost
          teamId: 7966eb04-efcc-499b-8f03-d13916330531
          totalVotes: 96
          description: Improved the Yellowstone Magic's hitting by 10%
          highestTeam: null
          highestTeamVotes: null
          teamVotes: null
        Winnie Hess Mystery (Season 1):
          id: winniehess_mystery
          bonusId: mysterious_improvement
          bonusTitle: Mysterious Improvement
          teamId: adc5b394-8f76-416d-9ce9-813706877b84
          totalVotes: 0
          description: Winnie Hess mysteriously improved to 2.5 stars after being traded from the Crabs to the Breath Mints. An investigation may be incoming.
          highestTeam: null
          highestTeamVotes: null
          teamVotes: null
      properties:
        id:
          type: string
          description: 'ID of the bonusResult object (usually UUID, not always)'
        bonusId:
          type: string
          description: Internal blessing ID
        bonusTitle:
          type: string
          description: Title of the blessing
        teamId:
          type: string
          format: uuid
          description: Team that won the blessing
        totalVotes:
          type: integer
          description: Total votes cast towards this blessing
        description:
          type: string
          description: Description of the blessing result
        teamVotes:
          type: integer
          description: Votes cast by the winning team (present starting Season 2)
        highestTeam:
          type: string
          format: uuid
          description: 'Highest bidding team, ie. cast the most votes  (present starting Season 2)'
        highestTeamVotes:
          type: integer
          description: Votes cast by the highest bidding team (present starting Season 2)
      required:
        - bonusId
        - bonusTitle
        - teamId
        - totalVotes
        - description
      x-tags:
        - Elections
    DecreeResult:
      type: object
      title: Decree Result
      x-examples:
        Open the Forbidden Book (Season 1):
          id: b090fdfc-7d9d-414b-a4a5-bbc698028c15
          decreeId: forbidden_book
          decreeTitle: Open the Forbidden Book
          description: |-
            The Book Opens.
            Solar Eclipse.
            Umpires' eyes turn white.
            Star player Jaylen Hotdogfingers is incinerated.
            Hellmouth swallows the Moab Desert.
            THE DISCIPLINE ERA BEGINS
          totalVotes: 566
        Bless Off (Season 7):
          id: 94ca62b2-fbba-4d32-a682-18b524ddd4a8
          decreeId: bless_off
          decreeTitle: Bless Off
          description: |-
            BLESS OFF PASSES
            SILENCE FALLS
            THE CRABS ARE DENIED
            THE BREATH MINTS ARE DENIED
            THE SHOE THIEVES ARE DENIED
            THE JAZZ HANDS ARE DENIED
            IN THE QUIET
            THE MICROPHONE CRANKS THE GAIN
          totalVotes: 227274
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
          description: ID of the decree result object
        decreeId:
          type: string
          format: uuid
          description: Internal ID of the decree
        decreeTitle:
          type: string
          description: Decree title
        description:
          type: string
          description: Decree result description
        totalVotes:
          type: integer
          description: Total votes cast towards this decree
      required:
        - id
        - decreeId
        - decreeTitle
        - description
        - totalVotes
      x-tags:
        - Elections
      description: Represents the outcome message of a single passed decree after the election.
    Division:
      type: object
      additionalProperties: false
      title: Division
      description: A single team division (eg. Wild High or Chaotic Good)
      properties:
        id:
          type: string
          format: uuid
          description: ID of this division
        teams:
          type: array
          description: IDs of teams in this division
          items:
            type: string
            format: uuid
          example:
            - b72f3061-f573-40d7-832a-5ad475bd7909
            - 8d87c468-699a-47a8-b40d-cfb73a5660ad
            - 36569151-a2fb-43c1-9df7-2df512424c82
            - ca3f1c8c-c025-4d8e-8eef-5be6accbeb16
            - a37f9158-7f82-46bc-908c-c9e2dda7c33b
        name:
          type: string
          description: Name of this division
          example: Wild High
      required:
        - id
        - teams
        - name
      x-examples: {}
      x-tags:
        - League
    League:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
          description: ID of the league
          example: d8545021-e9fc-48a3-af74-48685950a183
        subleagues:
          type: array
          description: IDs of subleagues in this league
          items:
            type: string
            format: uuid
          example:
            - aabc11a1-81af-4036-9f18-229c759ca8a9
            - 4fe65afa-804f-4bb2-9b15-1281b2eab110
        name:
          type: string
          description: Name of the league
          example: Internet League Blaseball
        tiebreakers:
          type: string
          format: uuid
          description: ID of the league's tiebreaker list
          example: faaa4d3f-4b76-4e10-99d3-bf933dcd1672
      required:
        - id
        - subleagues
        - name
        - tiebreakers
      x-examples: {}
      x-tags:
        - League
      title: League
    OffseasonRecap:
      type: object
      additionalProperties: false
      x-tags:
        - Elections
      title: Election Results
      x-examples:
        Season 7 election results:
          id: b9b7d77a-fe35-4df0-a68c-efd665ad42e0
          bonusResults:
            - f0f15969-aecb-4f9e-8eb9-00f05ece732c
            - ec18f915-7b78-478c-93c6-305eddaeeaed
            - 511260ad-b831-4ebc-a6b4-2582b661846e
            - 068792c3-51a0-47ae-a359-9ee234acb74a
            - e59fbc74-c6ea-4064-8309-e397aa4b3679
            - 8a2f2499-244d-4788-abd8-22b8e71a7ca9
            - fa34d625-5cb8-4f96-9bf9-4e6b916e93c2
            - c8b1de0c-1916-4181-a03a-0a831b0b8612
            - 6fbb2192-bc11-4fbc-9d78-54b34c170534
            - 1687cebf-9012-46f5-aeb3-1a4258a39b40
            - be2e2092-7572-4ece-ae7e-ce35721d0b4b
            - e6c853dc-75c8-4cd9-b637-5d894a346ed8
            - 61237abf-8bc7-4fb3-9ef4-8c77253e9a27
            - b02c57d4-9aca-4fcd-86c7-3a834dcbdd5c
            - 07b56f96-1e42-4eab-b852-9ca52e847c34
            - 46e9edc7-2d93-40ca-9926-9802925be2f2
            - 9cc4daf2-8f15-4cb5-a7cf-a5ce34562004
            - b7a5b9d0-55c9-45a7-8aba-be06f373872f
            - 41e610a8-3f8d-4be7-a9a5-018f82e03baf
            - 174f7f51-4d3a-44d4-ad15-27bbe1b37212
          decreeResults:
            - 94ca62b2-fbba-4d32-a682-18b524ddd4a8
          name: The Season 7 Election
          season: 6
          totalBonusVotes: 2692321
          totalDecreeVotes: 398218
          voteCount: 3090539
      properties:
        id:
          type: string
          format: uuid
          description: ID of the offseasonRecap object
        bonusResults:
          type: array
          description: IDs of blessing results
          items:
            type: string
            format: uuid
        decreeResults:
          type: array
          description: IDs of decree results (only passed decrees)
          items:
            type: string
            format: uuid
        name:
          type: string
          description: Name of the election
        season:
          type: integer
          description: Season of this election (zero-indexed)
        totalBonusVotes:
          type: integer
          description: Total votes cast towards blessings
        totalDecreeVotes:
          type: integer
          description: Total votes cast towards decrees
        voteCount:
          type: integer
          description: Total votes cast in this election
        eventResults:
          type: array
          description: IDs of "event results" (listed as "Tidings") on the website
          items:
            type: string
      required:
        - id
        - bonusResults
        - decreeResults
        - name
        - season
        - totalBonusVotes
        - totalDecreeVotes
        - voteCount
        - eventResults
    OffseasonSetup:
      type: object
      additionalProperties: false
      x-tags:
        - Elections
      title: Election Setup
      x-examples:
        Season 8 election:
          decrees:
            - id: wild_cards
              type: 31
              title: Wild Cards
              description: 'Every Season, a random team from each Subleague will leave Party Time to become the 5th Playoff team. A best of 3 Wild Card series will happen on Fridays.'
            - id: relief
              type: 32
              title: Relief
              description: 'Next Season, the bottom four teams will have Relief. When one of their pitchers gives up 5 runs, they''ll immediately be replaced by a pitcher from their Shadows.'
            - id: double_jumps
              type: 33
              title: Double Jumps
              description: 'Whenever a team defeats the team currently leading their Division, they''ll earn an extra win. Permanent effect.'
          blessings:
            - id: mod_player_stable
              type: 96
              value: 1
              title: Forever Physical
              subheader: 'Brought to you by @Limited Run Games@http://limitedrungames.com/blaseball'
              description: Keep a Random Player on your team Stable.
            - id: reroll_worst_players_3
              type: 10
              value: 3
              title: Radical Alchemy
              subheader: 'Brought to you by @Necrobarista@https://store.steampowered.com/app/725270/Necrobarista/'
              description: Re-rolls your team's three worst players.
            - id: mod_team_fireproof
              type: 64
              value: 1
              title: Anti Burnout
              subheader: 'Brought to you by @IndieCade@https://www.kickstarter.com/projects/indiecade/anywhere-and-everywhere'
              description: Your team is protected from Incinerations for the following season.
            - id: random_pitcher_star_boost
              type: 53
              value: 3
              title: Replacement Elbows
              subheader: 'Brought to you by @Pro Gymnast@http://www.walaber.com/pro-gymnast'
              description: Where did you find these? Improve 3 random pitchers on your team by one Star (20%)
            - id: add_new_player_rotation
              type: 107
              value: 1
              title: Promo Code
              subheader: 'Brought to you by @Blaseball Cares@https://www.blaseballcares.com'
              description: Enter the code. Recruit a rookie to be the 6th player in your Rotation.
            - id: mod_team_bird_boost
              type: 97
              value: 1
              title: Affinity For Crows
              subheader: 'Brought to you by @The Society for Internet Blaseball Research@https://sibr.dev/'
              description: 'Oh, that’s what they do. Your team will play 50% Better in Bird Weather.'
            - id: mod_team_home_field
              type: 98
              value: 1
              title: Home Field Advantage
              description: No place like home. Your Team starts with 1 Run when playing at home next season.
            - id: remove_worst_rotation
              type: 108
              value: 1
              title: Composite
              description: Reinforced. Remove the Worst Player from your Rotation. Your Rotation is now shorter.
            - id: steal_leaderboard_player_14
              type: 78
              value: 14
              title: Lottery Pick
              description: Steal the 14th Most Idolized Player in the League.
            - id: steal_leaderboard_player_21
              type: 78
              value: 21
              title: Blind Date
              description: Steal the 21st Most Idolized Player on the Leaderboard.
            - id: max_steal_least_popular
              type: 70
              value: 1
              title: Who? You too?
              description: Never heard of them. Maximize and steal the least Idolized player in the league.
            - id: duplicate_random_player
              type: 82
              value: 1
              title: Party Line
              description: Hello? Who's there? Replace a player on your team with the Alternate of a random player from another team.
            - id: steal_random_team_best_bullpen
              type: 101
              value: 1
              title: Thief in the Night
              description: Under the cover of darkness. Steal a Pitcher from a Divisional Opponent's Shadows.
            - id: random_hitter_star_boost
              type: 52
              value: 3
              title: Precognition
              description: Vision of things to come. Improve 3 random hitters on your team by one Star (20%)
            - id: incinerate_least_idolized
              type: 103
              value: 1
              title: New Kid
              description: A warm welcome. Incinerate the Least Idolized Player on Your Team.
            - id: barrel_of_peanuts
              type: 104
              value: 1
              title: Barrel of Tiny Eggs
              description: Feed the Hall Monitor. Fans of your team receive a big barrel of peanuts.
            - id: division_swap
              type: 99
              value: 1
              title: Divisional Swap
              description: Swap your team into the other Division in your Subleague.
            - id: subleague_swap
              type: 100
              value: 1
              title: Subleague Swap
              description: Swap your team into another Division in the opposite Subleague.
            - id: team_blood_type_grass
              type: 105
              value: 1
              title: Astroturf
              description: The grass is greener on the other side. Give your team Grass Blood Type.
            - id: team_blood_type_base
              type: 106
              value: 1
              title: Base Instincts
              description: Succumb. Give your team Base Blood Type.
          decreesToPass: 1
      properties:
        decrees:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                type: string
                format: uuid
                description: Internal decree ID
              type:
                type: integer
                description: Unknown
              title:
                type: string
                description: Decree title
              description:
                type: string
                description: Decree description
            required:
              - id
              - type
              - title
              - description
        blessings:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                type: string
                description: Internal blessing ID
              type:
                type: integer
                description: Unknown
              value:
                type: integer
                description: Unknown
              title:
                type: string
                description: Blessing title
              subheader:
                type: string
                description: Usually sponsor names
              description:
                type: string
                description: Blessing description
            required:
              - id
              - type
              - value
              - title
              - description
        decreesToPass:
          type: integer
          description: Amount of decrees that will pass
      required:
        - decrees
        - blessings
        - decreesToPass
    PlayoffMatchup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        awaySeed:
          type: integer
        awayTeam:
          type: string
          format: uuid
        awayWins:
          type: integer
        homeSeed:
          type: integer
        homeTeam:
          type: string
          format: uuid
        homeWins:
          type: integer
      required:
        - id
        - name
        - awaySeed
        - awayTeam
        - awayWins
        - homeSeed
        - homeTeam
        - homeWins
      title: Playoff Matchup
      x-tags:
        - League
    PlayoffRound:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        gameIndex:
          type: integer
        games:
          type: array
          items:
            type: string
            format: uuid
        matchups:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
        roundNumber:
          type: integer
        special:
          type: boolean
        winnerSeeds:
          type: array
          items:
            type: integer
        winners:
          type: array
          items:
            type: string
            format: uuid
      required:
        - id
        - gameIndex
        - games
        - matchups
        - name
        - roundNumber
        - special
        - winnerSeeds
        - winners
      x-tags:
        - League
      title: Playoff Round
    Playoffs:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        numberOfRounds:
          type: integer
        playoffDay:
          type: integer
        rounds:
          type: array
          items:
            type: string
            format: uuid
        season:
          type: integer
        tomorrowRound:
          type: integer
        winner:
          type: string
          format: uuid
          nullable: true
        tournament:
          type: integer
      required:
        - id
        - name
        - numberOfRounds
        - playoffDay
        - rounds
        - season
        - tomorrowRound
        - winner
        - tournament
      title: Playoffs
      x-tags:
        - League
    Season:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        league:
          type: string
          format: uuid
        rules:
          type: string
          format: uuid
        schedule:
          type: string
          format: uuid
        seasonNumber:
          type: integer
        standings:
          type: string
          format: uuid
        stats:
          type: string
          format: uuid
        terminology:
          type: string
          format: uuid
      required:
        - id
        - league
        - rules
        - schedule
        - seasonNumber
        - standings
        - stats
        - terminology
      title: Season
      x-tags:
        - League
    SimulationData:
      type: object
      additionalProperties: false
      title: Simulation Data
      x-examples: {}
      x-tags:
        - Global
      properties:
        id:
          type: string
          example: thisidisstaticyo
          description: Always "thisidisstaticyo"
        day:
          type: integer
          description: Current game day
          minimum: 0
          maximum: 120
          example: 69
        league:
          type: string
          format: uuid
          description: ID of the current league object
        nextElectionEnd:
          type: string
          format: date-time
          description: Time when the current election ends
        nextPhaseTime:
          type: string
          format: date-time
          description: Time the next game phase starts (very unreliable)
        nextSeasonStart:
          type: string
          format: date-time
          description: Time when next season starts
        phase:
          type: integer
          minimum: 0
          maximum: 15
          example: 2
          description: Current phase of the league (See `Simulation phases`)
        playOffRound:
          type: integer
          description: 'Current round of playoffs (zero-indexed, 0 if not in playoffs)'
        playoffs:
          type: string
          format: uuid
          description: ID of current playoffs object
        rules:
          type: string
          format: uuid
          description: Unknown
        season:
          type: integer
          description: Current game season
          minimum: 0
        seasonId:
          type: string
          format: uuid
          description: ID of the season object
        terminology:
          type: string
          format: uuid
          description: Unknown
        eraColor:
          type: string
          description: Theme color of the current game era
          example: '#ff0000'
          pattern: '#[0-9a-f]{6}'
        eraTitle:
          type: string
          example: The Discipline Era
          description: Name of the current game era (displayed in the Blaseball.com page header)
        twgo:
          type: string
          description: Concatenated initials of every player incinerated between Season 2 and Season 6
          example: JHFMTOJMNPSMLMDGFOSEZDTMJWHPADAACGRTBBPBBCJRTPMJCSNKKAOMVMSTAJTVTCJIMPSSSTBFHRSSMSDKIRLWLVWSSMEIMCCDMDRTEIFBCLRMMW
        subEraColor:
          type: string
          pattern: '#[0-9A-Fa-f]{6}'
          example: '#5988FF'
          description: Theme color of the current game sub-era
        subEraTitle:
          type: string
          description: Name of the current game sub-era (displayed in the Blaseball.com page header)
          example: Rest in Violence
        attr:
          type: array
          description: 'Various attributes, major league events, and unlocks. Often used as "feature flags" in the frontend code.'
          example:
            - OPENED_BOOK
            - UNLOCKED_PEANUTS
            - EAT_THE_RICH
            - UNLOCKED_INTERVIEWS
            - UNLOCKED_IDOLS
            - PARTY_TIME
            - UNLOCKED_HALL
          items:
            type: string
            enum:
              - OPENED_BOOK
              - UNLOCKED_PEANUTS
              - EAT_THE_RICH
              - UNLOCKED_INTERVIEWS
              - UNLOCKED_IDOLS
              - PARTY_TIME
              - UNLOCKED_HALL
        agitations:
          type: integer
          description: Amount of Sun 2 / Black Hole game events (including Season 10 finals)
        salutations:
          type: integer
          description: 'Unknown, but very ominous.'
        tournament:
          type: integer
          description: 'Identifier of current exibition tournament, or -1'
        tournamentRound:
          type: integer
          description: Current round of an active exibtion tournament (if applicable)
      required:
        - id
        - day
        - league
        - nextElectionEnd
        - nextPhaseTime
        - nextSeasonStart
        - phase
        - playOffRound
        - playoffs
        - rules
        - season
        - seasonId
        - terminology
        - eraColor
        - eraTitle
        - twgo
        - subEraColor
        - subEraTitle
        - attr
        - agitations
        - salutations
        - tournament
        - tournamentRound
    Standings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        losses:
          type: object
          additionalProperties:
            type: integer
        wins:
          type: object
          additionalProperties:
            type: integer
      required:
        - id
        - losses
        - wins
      title: League Standings
      x-tags:
        - League
    StreamData:
      type: object
      additionalProperties: false
      description: ''
      title: Stream Data
      x-examples: {}
      x-tags:
        - Global
      properties:
        value:
          type: object
          properties:
            games:
              type: object
              properties:
                sim:
                  $ref: '#/components/schemas/SimulationData'
                season:
                  $ref: '#/components/schemas/Season'
                standings:
                  $ref: '#/components/schemas/Standings'
                schedule:
                  type: array
                  items:
                    $ref: ../models/Game.v1.yaml
                tomorrowSchedule:
                  type: array
                  items:
                    $ref: ../models/Game.v1.yaml
                postseason:
                  oneOf:
                    - type: object
                    - $ref: '#/components/schemas/Playoffs'
              required:
                - sim
                - season
                - standings
                - schedule
                - tomorrowSchedule
                - postseason
            leagues:
              type: object
              properties:
                teams:
                  type: array
                  items:
                    $ref: ../models/Team.v1.yaml
                subleagues:
                  type: array
                  items:
                    $ref: '#/components/schemas/Subleague'
                divisions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Division'
                leagues:
                  type: array
                  items:
                    $ref: '#/components/schemas/League'
              required:
                - teams
                - subleagues
                - divisions
                - leagues
            temporal:
              $ref: '#/components/schemas/Temporal'
            fights:
              type: object
              properties:
                bossFights:
                  type: array
                  items: {}
      required:
        - value
    Subleague:
      type: object
      additionalProperties: false
      title: Subleague
      x-examples: {}
      properties:
        id:
          type: string
          example: aabc11a1-81af-4036-9f18-229c759ca8a9
          description: ID of this subleague
        name:
          type: string
          description: Name of this subleague
          example: The Wild League
        divisions:
          type: array
          description: IDs of divisions in this subleague
          items:
            type: string
            format: uuid
          example:
            - d4cc18de-a136-4271-84f1-32516be91a80
            - 98c92da4-0ea7-43be-bd75-c6150e184326
      x-tags:
        - League
    Temporal:
      type: object
      additionalProperties: false
      x-tags:
        - Global
      title: Temporal object
      description: 'Contains miscellaneous (usually story-related) data sent through the stream data. Most significant use is transmitting "site takeover" text (eg. the site announcement, Peanut, Hall Monitor, or Boss speaking - including during boss fights). Some fields (`theta` and `iota` at the moment) are currently unused.'
      properties:
        doc:
          type: object
          additionalProperties: false
          required:
            - id
            - alpha
            - beta
            - gamma
            - delta
            - epsilon
            - zeta
            - eta
            - theta
            - iota
          properties:
            id:
              type: string
              example: whatistime
              description: Always "whatistime"
            alpha:
              type: integer
              description: 'Amount of peanuts that can be bought at once in the store. Fluctuated a lot during Season 3, but has been set to 1000 since.'
            beta:
              type: integer
              description: Maximum tier of squirrel in the store. Currently 1 (one tier only).
            gamma:
              type: integer
              description: '-1 if the "Site Announcer" is speaking, 0 if the Peanut is speaking, 1 if the Hall Monitor is speaking, 2 if the Boss is speaking, has historically been 500000000'
            delta:
              type: boolean
              description: Whether to show sponsor item in the store
            epsilon:
              type: boolean
              description: Whether a "site takeover" is currently happening. Is (mostly) `false` during active bossfights despite text being displayed.
            zeta:
              type: string
              description: 'Text currently being said by the "site takeover" speaker. This includes the Peanut''s flavor text during boss fights, even though `epsilon` is `false` during them.'
            eta:
              type: integer
              description: How many games the Crabs have won (seen through the Telescope). Added mid-Season 11.
            theta:
              type: string
              description: Unknown function. Currently an empty string. Added mid-Season 11.
            iota:
              description: Unknown function. Currently zero. Added mid-Season 11.
              type: integer
      required:
        - doc
    TickerMessage:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: ID of this ticker message (not always a UUID)
        msg:
          type: string
          description: Text of this message
        expire:
          type: string
          nullable: true
          format: date-time
          description: Time this message expires (or null for indefinite)
      required:
        - id
        - msg
        - expire
      x-tags:
        - Global
    Tiebreakers:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          description: ID of this tiebreaker object
          format: uuid
        order:
          type: array
          description: List of teams in their tiebreaker order
          items:
            type: string
            format: uuid
      required:
        - id
        - order
      x-tags:
        - League
    GameStatsheet:
      type: object
      additionalProperties: false
      x-tags:
        - Games
        - Statsheets
      title: Game Statsheet
      description: |-
        Represents the statsheet of a single game. This object doesn't include much information by itself, but refers to the team statsheets (which in turn refer to the player statsheets) containing most of the useful statistics.

        In case of *Black Hole* or *Sun 2* weather, the runs by inning arrays may contain "negative runs" - 10 runs get subtracted from the runs for that inning, and adding up all the innings will still total the team's final score for that game.
      properties:
        id:
          type: string
          description: ID of this game statsheet
        homeTeamRunsByInning:
          type: array
          minItems: 8
          description: Runs scored by the home team in each inning
          items:
            type: integer
        awayTeamRunsByInning:
          type: array
          minItems: 9
          description: Runs scored by the away team in each inning
          items:
            type: integer
        awayTeamTotalBatters:
          type: integer
          description: Always 0 (broken?)
        homeTeamTotalBatters:
          type: integer
          description: Always 0 (broken?)
        awayTeamStats:
          type: string
          format: uuid
          description: ID of the away team's statsheet for this game
        homeTeamStats:
          type: string
          format: uuid
          description: ID of the home team's statsheet for this game
      required:
        - id
        - homeTeamRunsByInning
        - awayTeamRunsByInning
        - awayTeamTotalBatters
        - homeTeamTotalBatters
        - awayTeamStats
        - homeTeamStats
    PlayerStatsheet:
      type: object
      additionalProperties: false
      x-tags:
        - Players
        - Statsheets
      title: Player Statsheet
      description: Represents the statsheet for a single player during a single game.
      properties:
        id:
          type: string
          format: uuid
          description: The ID of this player statsheet
        playerId:
          type: string
          format: uuid
          description: The ID of the player this statsheet is for
        teamId:
          type: string
          format: uuid
          description: The ID of the team this player played on during this game
        team:
          type: string
          description: The name of the team this player played on during this game
        name:
          type: string
          description: The name of the player
        atBats:
          type: integer
          description: 'Batters: amount of at bats during this game. Not entirely accurate.'
        caughtStealing:
          type: integer
          description: 'Batters: amount of times caught stealing a base'
        doubles:
          type: integer
          description: 'Batters: amount of doubles hit'
        earnedRuns:
          type: integer
          description: 'Pitchers: amount of runs scored by opposing batters'
        groundIntoDp:
          type: integer
          description: 'Batters: amount of ground outs into double plays hit'
        hits:
          type: integer
          description: 'Batters: amount of hits (of any type)'
        hitsAllowed:
          type: integer
          description: 'Pitchers: amount of hits allowed to opposing batters'
        homeRuns:
          type: integer
          description: 'Batters: amount of home runs scored'
        losses:
          type: integer
          description: '1 if the team lost this game, 0 otherwise'
        outsRecorded:
          type: integer
          description: 'Pitchers: the amount of outs this pitcher has thrown the opposing team (27 in a full game)'
        rbis:
          type: integer
          description: 'Batters: amount of runs batted in (includes home runs)'
        runs:
          type: integer
          description: 'Batters: amount of runs scored (any type)'
        stolenBases:
          type: integer
          description: 'Batters: amount of bases stolen'
        strikeouts:
          type: integer
          description: 'Pitchers: amount of times this pitcher has struck out the opposing batter'
        struckouts:
          type: integer
          description: 'Batters: amount of times struck out'
        triples:
          type: integer
          description: 'Batters: amount of triples hit'
        walks:
          type: integer
          description: 'Batters: amount of walks drawn'
        walksIssued:
          type: integer
          description: 'Pitchers: amount of walks issued to opposing batters'
        wins:
          type: integer
          description: '1 if the team won this game, 0 otherwise'
        hitByPitch:
          type: integer
          description: 'Batters: amount of times hit by pitch'
        hitBatters:
          type: integer
          description: 'Pitchers (Jaylen): amount of batters hit by pitch'
        quadruples:
          type: integer
          description: 'Batters: amount of quadruples hit (only relevant with 5th base)'
        pitchesThrown:
          type: integer
          description: 'Pitchers: the amount of pitches thrown'
      required:
        - playerId
        - teamId
        - team
        - name
        - atBats
        - caughtStealing
        - doubles
        - earnedRuns
        - groundIntoDp
        - hits
        - hitsAllowed
        - homeRuns
        - losses
        - outsRecorded
        - rbis
        - runs
        - stolenBases
        - strikeouts
        - struckouts
        - triples
        - walks
        - walksIssued
        - wins
    SeasonStatsheet:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        teamStats:
          type: array
          items:
            type: string
            format: uuid
      required:
        - id
      x-tags:
        - Statsheets
        - League
      title: Season Statsheet
    TeamStatsheet:
      type: object
      additionalProperties: false
      x-tags:
        - Teams
        - Statsheets
      title: Team Statsheet
      properties:
        id:
          type: string
          format: uuid
          description: ID of this team statsheet
        playerStats:
          type: array
          description: List of player statsheets - one for each player that's played in this game for this team.
          items:
            type: string
            format: uuid
        gamesPlayed:
          type: integer
          description: Always 0 (broken?)
        wins:
          type: integer
          description: Always 0 (broken?)
        losses:
          type: integer
          description: Always 0 (broken?)
        name:
          type: string
          description: Name of the team this statsheet is for
        teamId:
          type: string
          format: uri
          description: ID of the team this statsheet is for
      required:
        - id
        - playerStats
        - gamesPlayed
        - wins
        - losses
        - name
        - teamId
      description: |-
        Represents the statsheet for a single team during a single game.

        The list of player statsheets are in order of player appearance in the game. If this is the home team, the first item will be the pitcher (as the pitcher is the first relevant player when the away team is batting).
    TributeItem:
      title: Tribute Item
      type: object
      properties:
        playerID:
          type: string
          description: Player ID
          format: uuid
        peanuts:
          type: integer
          description: Peanuts paid tribute towards this player
      x-tags:
        - Global
    IdolItem:
      title: Idol
      type: object
      description: ''
      properties:
        playerId:
          type: string
          description: ID of the player
          format: uuid
        total:
          type: integer
          description: Amount of users idoling this player (removed after Season 6)
          deprecated: true
          minimum: 0
        id:
          type: string
          format: uuid
          description: 'Unknown (not a player ID, removed after Season 6)'
          deprecated: true
      x-tags:
        - Global
    EventResult:
      title: Event Result
      type: object
      properties:
        id:
          type: string
          description: The internal ID of this event result
        msg:
          type: string
          description: The message displayed on the Blaseball website
      x-examples:
        ascension_10:
          id: ascension_10
          msg: |-
            The Baltimore Crabs have been Called Up.
            Good Luck on your Journey!
            They shall be replaced in the ILB by the Tokyo Lift.
      description: Represents a general (usually story-related) event after the election (eg. the Crabs ascending).
      x-tags:
        - Elections
    Modification:
      title: Modification
      type: object
      properties:
        id:
          type: string
          description: ID of the modification
        color:
          type: string
          description: Modification icon color
        background:
          type: string
          description: Modification background color
        textColor:
          type: string
          description: Modification text color
        title:
          type: string
          description: Modification name
        description:
          type: string
          description: Modification description
      x-examples:
        fireproof:
          id: FIREPROOF
          color: '#a5c5f0'
          backgroud: '#4c77b0'
          textColor: '#a5c5f0'
          title: Fireproof
          description: A Fireproof player can not be incinerated.
      description: Represents a Player or Team Modification.
      x-tags:
        - Global
    Item:
      title: Item
      type: object
      properties:
        id:
          type: string
          description: ID of the Item
        name:
          type: string
          description: Item name
        attr:
          type: string
          description: 'Modification ID associated with this item, or "NONE"'
      x-examples:
        grappling_hook:
          id: GRAPPLING_HOOK
          title: Grappling Hook
          description: NONE
      description: Represents an Item (Bat or Armor)
      x-tags:
        - Global
    FeedEvent:
      title: Feed Event
      type: object
      description: An event in the game feed.
      properties:
        id:
          type: string
          format: uuid
          description: ID of the event
        playerTags:
          type: array
          description: List of players associated with the event
          items:
            type: string
            format: uuid
        teamTags:
          type: array
          description: List of teams associated with the event
          items:
            type: string
            format: uuid
        gameTags:
          type: array
          description: List of games associated with the event
          items:
            type: string
            format: uuid
        metadata:
          type: object
          description: Event-specific metadata
        created:
          type: string
          format: date-time
          description: Time the event occurred
        season:
          type: integer
          default: -1
          description: Season the event occurred in
        tournament:
          type: integer
          default: -1
          description: Tournament the event occurred in
        type:
          $ref: '#/components/schemas/FeedType'
        day:
          type: integer
          description: Day the event occurred
        phase:
          type: integer
          description: Game phase the event occurred in
        category:
          type: integer
          description: Category of event
        description:
          type: string
          description: Event text
      required:
        - id
        - playerTags
        - teamTags
        - gameTags
        - metadata
        - created
        - season
        - tournament
        - type
        - day
        - phase
        - category
        - description
      x-tags:
        - Feed
    FeedType:
      type: integer
      title: Feed Event Type
      description: |-
        The type of a feed event.

        * 1: Play ball!
        * 2: Half-inning
        * 3: Pitcher change
        * 4: Stolen base
        * 5: Walk
        * 6: Strikeout
        * 7: Flyout
        * 8: Ground out
        * 9: Home run
        * 10: Hit (single/double/triple)
        * 11: Game end log
        * 12: Plate appearance
        * 13: Strike (not including Foul Balls)
        * 14: Ball
        * 15: Foul Ball
        * 20: Solar Panels overflow run activation
        * 22: Hit by pitch
        * 23: Player skipped due to being Shelled or Elsewhere
        * 24: Partying
        * 25: Strike zapped by Electric blood
        * 27: Mild pitch
        * 28: End of inning
        * 29: Site takeover text
        * 30: Black hole (in-game)
        * 31: Sun 2 (in-game)
        * 33: Birds flavor text
        * 34: Murder of crows
        * 35: Birds free shelled player
        * 36: Triple Threat
        * 37: Free Refill
        * 39: Wired
        * 40: Feedback blocked
        * 41: Feedback
        * 47: Allergic reaction
        * 48: Reverberating
        * 49: Reverb shuffle
        * 51: Blooddrain
        * 52: Siphon
        * 54: Incineration
        * 55: Fire eating
        * 56: Flag planted
        * 57: Renovation built
        * 59: Decree passed
        * 60: Blessing won
        * 61: Will received
        * 62: Flood
        * 63: Salmon swim upstream
        * 65: Entering the Secret Base
        * 66: Exiting the Secret Base
        * 67: Consumers attack
        * 69: Echo Chamber
        * 70: Grind Rail
        * 72: Peanut Mister
        * 73: Peanuts flavor text
        * 74: Tasting the infinite (Shelling)
        * 78: Solar Panels start-up text
        * 79: Solar Panels overflow run collection
        * 81: Tarot reading
        * 82: Emergency Alert
        * 84: Return from Elsewhere
        * 85: Over Under
        * 86: Under Over
        * 88: Undersea
        * 91: Homesickness
        * 92: Superyummy text
        * 93: Perk
        * 96: Earlbirds
        * 97: Late to the Party
        * 106: Added in-game modifier (Triple Threat, Free Refill, Magmatic, Inhabiting, etc)
        * 107: Removed in-game modifier (same as above, but when they disappear)
        * 108: Modifier expires
        * 109: Player recruited (including Postseason Births)
        * 110: Player sent to shadows and replaced (necromancy)
        * 111: Player removed and replaced from shadows (Returned)
        * 112: ECHO STATIC player removed from team
        * 113: Player trade
        * 114: Player changing position
        * 115: Player joining team
        * 116: New player after incineration
        * 117: Player stat increase
        * 118: Player stat decrease
        * 119: Player reroll
        * 125: Player enters the Hall of Flame
        * 126: Player exits the Hall of Flame
        * 127: Player gained item
        * 130: Reverb shuffle (full)
        * 132: Reverb shuffle (rotation)
        * 135: New team
        * 136: New player (excluding incinerations)
        * 137: Player hatched
        * 139: Player Evolves
        * 141: Team wins Internet Series
        * 142: Postseason spot
        * 143: Final standings
        * 144: Wired -> Tired transitions
        * 145: Player becomes an Alternate
        * 146: Added modifier due to another modifier(?) (under/over, Perk)
        * 147: Removed modifier added due to another modifier(?) (under/over, Perk)
        * 148: Superyummy transitions (Overperforming -> Underperforming, vice versa, may be general modifier-induced mod swaps)
        * 149: Necromancy narration
        * 150: Returned player is permitted to stay
        * 151: Decree narration
        * 152: Will results
        * 154: Team shamed
        * 153: Team modification blessing (S15+)
        * 155: Team shames
        * 156: Sun 2 grants win
        * 157: Black Hole swallows
        * 158: Eliminated from postseason
        * 159: Postseason advance
        * 161: Player gained blood type
        * 165: High Pressure (The pressure is on/off, Overperforming added and removed) 
        * 166: Lineup optimized
        * 168: Peanut allergy cured (Nut Button)
        * 169: Echoed player
        * 170: Echo player becomes Static
        * 171: Echo fades
        * 172: Echoed modification added
        * 174: Receiver becomes an echo
        * 175: Alternate Coin text (hidden from Book, includes player)
        * 176: The Investigation is Underway.
        * 178: Midseason Middling
        * 179: Player hidden stat increase
        * 180: Player hidden stat decrease
        * 181: Entering a Crime Scene
        * 185: Item breaks
        * 192: Holiday Inning
        * 193: Prize Match (declaring what the prize is)
      x-tags:
        - Feed
tags:
  - name: Elections
  - name: Feed
  - name: Games
  - name: Global
  - name: League
  - name: Players
  - name: Statsheets
  - name: Teams
